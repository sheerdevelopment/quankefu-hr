.right_col{:role => "main"}
  %div
    .page-title
      .title_left
        %h3= title
      .clearfix

      .row
        .col-md-12.col-sm-12.col-xs-12
          .x_panel
            .x_content
              %br/
              = form_for(@absence, html: { class: "form-horizontal form-label-left" }) do |f|
                = render "shared/error_messages", object: @absence

                .form-group
                  %label.control-label.col-md-3.col-sm-3.col-xs-12{:for => "Type"}
                    = t(:absence_type)
                    %span.required *
                  .entry
                    .col-md-6.col-sm-6.col-xs-6.input-field
                      .radio
                        - @absence_types.each do |absence_type|
                          .iradio_flat-green
                            %input.flat{:name => "absence[absence_type_id]", :type => "radio", :value => absence_type.id, :checked => absence_type == @absence.type, :required => ""}/
                            %ins.iCheck-helper
                          = absence_type.name

                .form-group
                  %label.control-label.col-md-3.col-sm-3.col-xs-12{:for => "start"}
                    = t(:start_time)
                    %span.required *
                  .col-md-3.col-sm-3.col-xs-12
                    #start.input-group
                      %input.form-control.col-md-7.col-xs-12{:type => "text", :name => "absence[start]", :value => @absence.try(:start).try(:strftime, "%Y-%m-%d %H:%M:%S"), :required => ""}/
                      %span.input-group-addon
                        %i.fa.fa-calendar

                .form-group
                  %label.control-label.col-md-3.col-sm-3.col-xs-12{:for => "end"}
                    = t(:end_time)
                    %span.required *
                  .col-md-3.col-sm-3.col-xs-12
                    #end.input-group
                      %input.form-control.col-md-7.col-xs-12{:type => "text", :name => "absence[end]", :value => @absence.try(:end).try(:strftime, "%Y-%m-%d %H:%M:%S"), :required => ""}/
                      %span.input-group-addon
                        %i.fa.fa-calendar

                .form-group
                  %label.control-label.col-md-3.col-sm-3.col-xs-12{:for => "day"}
                    = t(:days)
                  .entry
                    .col-md-3.col-sm-3.col-xs-3.input-field
                      %input#days.form-control.col-md-7.col-xs-12{:type => "number", :value => @absence.days, :min => 0, :disabled => "disabled"}/

                .form-group
                  %label.control-label.col-md-3.col-sm-3.col-xs-12{:for => "comments"}
                    = t(:comments)
                  .entry
                    .col-md-6.col-sm-6.col-xs-6.input-field
                      %textarea.form-control.col-md-7.col-xs-12{:name => "absence[comments]", :type => "text", :rows => 5, :placeholder => t(:optional)}= @absence.comments

                .ln_solid
                .form-group
                  .col-md-6.col-sm-6.col-xs-12.col-md-offset-3
                    %button.btn.btn-success{:type => "submit"}= t(:submit)

= javascript_include_tag "daterangepicker"

:javascript
  $(document).ready(function(){
    var startPicker = $('#start');
    var endPicker = $('#end');

    startPicker.datetimepicker({
      format: 'YYYY-MM-DD HH:mm',
      useCurrent: false
    });

    endPicker.datetimepicker({
      format: 'YYYY-MM-DD HH:mm',
      useCurrent: false
    });

    startPicker.click(function(){
      $(this).datetimepicker('show');
    });

    endPicker.click(function(){
      $(this).datetimepicker('show');
    });

    startPicker.on('dp.change', function (e) {
      endPicker.data('DateTimePicker').minDate(e.date);
    });

    endPicker.on('dp.change', function (e) {
      var startDate = startPicker.datetimepicker('date');
      if (startDate == null) {
        startPicker.data('DateTimePicker').maxDate(e.date);
      } else {
        $('#days').val(daydiff(startDate, e.date));
      }
    });
  });
